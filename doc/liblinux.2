.\" man page for Munts Technologies Linux Simple I/O Library
.\"
.\" Copyright (C)2016-2018, Philip Munts, President, Munts AM Corp.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions are met:
.\"
.\" * Redistributions of source code must retain the above copyright notice,
.\"   this list of conditions and the following disclaimer.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
.\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.TH liblinux 2 "21 December 2018" "version 1" "Linux Simple I/O Library"
.SH NAME
.B liblinux
\-\- Linux Simple I/O Library: Linux System Call Wrapper Module
.SH SYNOPSIS
.nf
.B #include <libsimpleio/liblinux.h>

.BI "void LINUX_detach(int32_t *" error ");"

.BI "void LINUX_drop_privileges(const char *" username ", int32_t *" error ");"

.BI "void LINUX_openlog(const char *" id ", int32_t " options ", int32_t " facility ","
.BI "  int32_t *" error ");"

.BI "void LINUX_syslog(int32_t " priority ", const char *" msg ", int32_t *" error ");"

.BI "void LINUX_strerror(int32_t " error ", char *" buf ", int32_t " bufsize ");"

.BI "void LINUX_poll(int32_t " numfiles ", int32_t *" files ", int32_t *" events ","
.BI "  int32_t *" results ", int32_t " timeout ", int32_t *" error ");"

.BI "void LINUX_usleep(int32_t " microseconds ", int32_t *" error ");"

.BI "void LINUX_command(const char *" cmd ", int32_t *" status ", int32_t *" error ");"

.fi
Link with
.BR -lsimpleio .
.SH DESCRIPTION
.nh
These functions wrap certain useful Linux system calls for use by other
programming languages such as Ada, C#, Java, and Pascal.  They are provided
for the convenience of devlopers using
.B libsimpleio
with those langauges.  For the C programming language, they offer no
particular benefit over the regular system call wrappers.
.PP
All functions return either
.B 0
(upon success) or an
.B errno
value (upon failure) in
.IR *error .
.PP
.B LINUX_detach()
detaches the calling process from its controlling terminal and continues
execution in the background.
.PP
.B LINUX_drop_privileges()
allows a process started by the superuser to drop its privileges to those
of the user specified by the
.I username
parameter.
.PP
.B LINUX_openlog()
opens a connection to the
.B syslog
message logger.  The
.IR options " and " facility
parameters accept the same values as the
.B openlog()
system library function.
.PP
.B LINUX_syslog()
transmits a text message supplied in the
.I msg
parameter to the
.B syslog
message logger. The
.I priority
parameter accepts the same values as the
.B syslog()
system library function.
.PP
.B LINUX_strerror()
retrieves the error message for the
.B errno
value passed in the
.I error
parameter.  A destination buffer address and size must be passed in the
.IR buf " and " bufsize
parameters.
.PP
.B LINUX_poll()
waits for events on an set of file descriptors.  The number of file descriptors
is passed in the
.I numfiles
parameter.  An array of file descriptors is passed in the
.I files
parameter.  An array of requested events, using the same values as the
.B poll()
system library function, is passed in the
.I events
parameter.  The results for each file descriptor, also using the same values
as the
.B poll()
system library function, will be returned in the
.I results
parameter.  A timeout in milliseconds may be passed in the
.I timeout
parameter.  A timeout of zero indicates an immediate return without waiting at all.
A timeout of
.B -1
indicates waiting forever.  If the timeout expires without any
event on any file descriptor occurring, then
.I error
will be set to
.BR EAGAIN .
.PP
.B LINUX_usleep()
causes the calling program to sleep for the period indicated by
.IR microseconds ", by calling the"
.B usleep()
system library function.
.PP
.B LINUX_command()
passes the shell command string specified by the
.I cmd
parameter to the
.B system()
system library function for execution.  The return value from the
shell command will be returned in
.IR status "."
.SH SEE ALSO
.BR libsimpleio "(2), " libadc "(2), " libdac "(2), " libevent "(2), " libgpio "(2),"
.br
.BR libhidraw "(2), " libi2c "(2), " libipv4 "(2), " liblinx "(2), " libpwm "(2),"
.br
.BR libserial "(2), " libspi "(2), " libstream "(2), " libwatchdog "(2)"
.SH AUTHOR
Philip Munts, President, Munts AM Corp dba Munts Technologies
