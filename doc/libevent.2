.\" man page for Munts Technologies Linux Simple I/O Library
.\" libevent event notification module
.\"
.\" Copyright (C)2016, Philip Munts, President, Munts AM Corp.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions are met:
.\"
.\" * Redistributions of source code must retain the above copyright notice,
.\"   this list of conditions and the following disclaimer.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
.\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.TH libevent 2 "5 October 2016" "version 1.0" "Linux Simple I/O Library"
.SH NAME
.B libevent
\-\- Linux Simple I/O Library: Event Notification Module
.SH SYNOPSIS
.nf
.B #include <libevent.h>

.BI "void EVENT_open(int32_t *" error ");"

.BI "void EVENT_close(int32_t *" error ");"

.BI "void EVENT_register_fd(int32_t " fd ", int32_t " events ", int32_t *" error ");"

.BI "void EVENT_unregister_fd(int32_t " fd ", int32_t *" error ");"

.BI "void EVENT_wait(int32_t *" fd ", int32_t *" event ", int32_t " timeoutms ", int32_t *" error ");"

.fi
Link with
.BR -lsimpleio .
.SH DESCRIPTION
.nh
All functions return either
.B 0
(upon success) or an
.B errno
value (upon failure) in
.IR *error .
.PP
.B EVENT_open()
must be called before any of the other functions, to open a connection to the
.B epoll
event notification subsystem.
.PP
.B EVENT_close()
the connection to the
.B epoll
subsystem.
.PP
.B EVENT_register_fd()
registers a file descriptor
.I fd
for event notifications of the types indicated by
.IR events .
Event notification codes, such as
.B EPOLLIN
(input ready), are defined in
.BR /usr/include/sys/epoll.h ,
and may be
.BR OR "'d"
together to register for more than one type of event notification.
.PP
.B EVENT_unregister_fd()
unregisters event notifications for the file descriptor
.IR fd .
.PP
.B EVENT_wait()
waits until an event notification occurs for any of the previously registered file descriptors.  The
.I timeoutms
parameter indicates the time in milliseconds to wait for a notfication.  If
an event notification occurs before the timeout expires,
.I *error
is set to
.B 0
and
.I *fd
and
.I *event
are set to the next available file descriptor and event code.
If no event notification occurs
before the timeout expires,
.I *error
is set to
.B EAGAIN
and
.I *fd
and
.I *event
are invalid.
.SH SEE ALSO
.BR libsimpleio "(2), " libgpio "(2), " libhidraw "(2), " libi2c "(2), " liblinux "(2),"
.br
.BR liblinx "(2), " libserial "(2), " libspi "(2), " libtcp4 "(2)"
.SH AUTHOR
Philip Munts, President, Munts AM Corp dba Munts Technologies
